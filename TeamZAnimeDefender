-- Detecting device type (mobile or PC)
local UserInputService = game:GetService("UserInputService")
local isMobile = UserInputService.TouchEnabled -- Checks if the device has touch input

-- Creating the user interface (GUI)
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TraitWindow = Instance.new("Frame")
local CustomizationWindow = Instance.new("Frame")
local MinimizeButton = Instance.new("TextButton")
local CloseButton = Instance.new("TextButton")

-- GUI settings (adaptive for mobile and PC)
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame settings (holds multiple windows)
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MainFrame.BorderSizePixel = 3
MainFrame.BorderColor3 = Color3.fromRGB(255, 0, 0) -- Red borders
MainFrame.Parent = ScreenGui
MainFrame.Active = true
MainFrame.Draggable = true

-- Minimize Button settings
MinimizeButton.Size = UDim2.new(0, 100, 0, 40)
MinimizeButton.Position = UDim2.new(0, 10, 0, 10)
MinimizeButton.Text = "Minimize"
MinimizeButton.TextScaled = true
MinimizeButton.TextColor3 = Color3.new(1, 1, 1)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(85, 85, 85)
MinimizeButton.Parent = MainFrame

-- Close Button settings
CloseButton.Size = UDim2.new(0, 100, 0, 40)
CloseButton.Position = UDim2.new(0, 120, 0, 10)
CloseButton.Text = "Close"
CloseButton.TextScaled = true
CloseButton.TextColor3 = Color3.new(1, 1, 1)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton.Parent = MainFrame

-- TraitWindow settings (inside MainFrame)
TraitWindow.Size = UDim2.new(0, 380, 0, 220)
TraitWindow.Position = UDim2.new(0, 10, 0, 60)
TraitWindow.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TraitWindow.BorderSizePixel = 2
TraitWindow.BorderColor3 = Color3.fromRGB(255, 0, 0)
TraitWindow.Parent = MainFrame
TraitWindow.Visible = true

-- CustomizationWindow settings (can be opened through a button)
CustomizationWindow.Size = UDim2.new(0, 380, 0, 220)
CustomizationWindow.Position = UDim2.new(0, 10, 0, 60)
CustomizationWindow.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
CustomizationWindow.BorderSizePixel = 2
CustomizationWindow.BorderColor3 = Color3.fromRGB(255, 0, 0)
CustomizationWindow.Parent = MainFrame
CustomizationWindow.Visible = false -- Hidden by default

-- Minimize action
MinimizeButton.MouseButton1Click:Connect(function()
    if MainFrame.Visible then
        MainFrame.Visible = false
    else
        MainFrame.Visible = true
    end
end)

-- Close action
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy() -- Completely closes the script
end)

-- Button for Trait Reroll in Trait Window
local RerollButton = Instance.new("TextButton")
RerollButton.Size = UDim2.new(0, 200, 0, 50)
RerollButton.Position = UDim2.new(0.5, -100, 0, 30)
RerollButton.Text = "Activate Trait Reroll"
RerollButton.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
RerollButton.TextColor3 = Color3.new(1, 1, 1)
RerollButton.Parent = TraitWindow

-- Button for Rejoin Server in Trait Window
local RejoinButton = Instance.new("TextButton")
RejoinButton.Size = UDim2.new(0, 200, 0, 50)
RejoinButton.Position = UDim2.new(0.5, -100, 0, 100)
RejoinButton.Text = "Rejoin Server"
RejoinButton.BackgroundColor3 = Color3.fromRGB(85, 255, 85)
RejoinButton.TextColor3 = Color3.new(1, 1, 1)
RejoinButton.Parent = TraitWindow

-- Action when the Reroll Button is clicked
RerollButton.MouseButton1Click:Connect(function()
    print("Trait Reroll activated!")
    traitReroll()
end)

-- Action when the Rejoin Button is clicked
RejoinButton.MouseButton1Click:Connect(function()
    print("Rejoining Server...")
    game:GetService("TeleportService"):Teleport(game.PlaceId)
end)

-- Function for Trait Reroll (rollback included)
function traitReroll()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local traitRerollsUsed = 0 -- Simulating used rerolls
    local passiveObtained = false -- Simulating if the desired passive is obtained

    -- Loop for reroll
    while not passiveObtained and traitRerollsUsed < 5 do
        traitRerollsUsed = traitRerollsUsed + 1
        passiveObtained = (math.random(1, 10) == 1) -- 1 in 10 chance
        wait(2)
    end

    -- If the passive is not obtained, kick and rollback
    if not passiveObtained then
        local rerollsBeforeRejoin = traitRerollsUsed
        player:Kick("Rejoining a new server to rollback...")
        wait(5)
        game:GetService("TeleportService"):Teleport(game.PlaceId)
        traitRerollsUsed = rerollsBeforeRejoin
        print("Rerolls restored: " .. rerollsBeforeRejoin)
    else
        print("Desired passive obtained!")
    end
end
